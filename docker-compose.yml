services:
  app:
    container_name: app
    user: '1000:1000'
    build:
      context: ./docker/php
      dockerfile: php.Dockerfile
    ports:
      - 5173:5173
    tty: true
    volumes: # 高速化のため名前付きvolumesで保存
      - .:/var/www:cached
      - app_node_modules:/app/node_modules
      - app_vender:/app/vendor
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
      - ./docker/php/logs:/var/log
    extra_hosts:
      - host.docker.internal:host-gateway # windows環境でxdebugを使うために記述

  nginx:
    container_name: nginx
    build:
      context: ./docker/nginx
      dockerfile: nginx.Dockerfile
    ports:
      - 8888:80
    volumes:
      - .:/var/www:cached
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    working_dir: /var/www
    tty: true
    depends_on:
      - app
      - mysql

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASS}
      - MYSQL_ROOT_PASSWORD=${DB_PASS}
      - TZ=${TZ}
    command: mysqld --default-authentication-plugin=mysql_native_password
    volumes:
      - ./logs:/var/log/mysql
      - ./docker/mysql/data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./docker/mysql/sql:/docker-entrypoint-initdb.d
    ports:
      - 3306:3306
    env_file:
      - .env

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - 16379:6379
    restart: unless-stopped
    volumes:
      - ./docker/redis/data:/data
    tty: true

volumes: # 名前付きvolumesで保存
  app_node_modules:
  app_vender:
